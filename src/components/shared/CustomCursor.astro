---

---

<div
  class="fixed top-0 left-0 z-[9999] w-[120px] h-[120px] rounded-full bg-transparent pointer-events-none transform -translate-x-1/2 -translate-y-1/2 cursor"
>
  <span
    class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 scale-0 text-black text-lg leading-[120%] opacity-0 pointer-events-none text-center w-full h-auto px-3 cursor-text"
  ></span>
</div>

<script is:inline>
  document.addEventListener("astro:page-load", () => {
    // Check if device is touch-enabled
    const isTouchDevice =
      "ontouchstart" in window || navigator.maxTouchPoints > 0;

    // If it's a touch device, hide the cursor and return early
    if (isTouchDevice) {
      const cursor = document.querySelector(".cursor");
      if (cursor) {
        cursor.style.display = "none";
      }
      return;
    }

    // Grab custom cursor elements
    const cursor = document.querySelector(".cursor");
    if (!cursor) return;
    const cursorText = cursor.querySelector(".cursor-text");

    // Set initial mouse position
    let mouseX = window.innerWidth / 2;
    let mouseY = window.innerHeight / 2;

    // Update cursor position with GSAP for smooth, hardware-accelerated movement
    window.addEventListener("mousemove", (e) => {
      mouseX = e.clientX;
      mouseY = e.clientY;
      gsap.to(cursor, {
        duration: 1.2,
        x: mouseX,
        y: mouseY,
        ease: "power3.out",
      });
    });

    // Show the custom cursor when hovering over an element with custom data attributes
    function updateCursor(target) {
      if (!target) return;
      const el = target.closest("[data-cursor-text]");
      if (!el) return;

      const text = el.getAttribute("data-cursor-text") || "";
      const color = el.getAttribute("data-cursor-color") || "transparent";

      // Animate the custom cursor to be visible with the proper color
      gsap.to(cursor, {
        duration: 0.5,
        opacity: 1,
        scale: 1,
        backgroundColor: color,
        ease: "power3.out",
      });
      cursorText.textContent = text;
      gsap.to(cursorText, {
        duration: 0.5,
        scale: 1,
        opacity: 1,
        ease: "back.out(1.7)",
      });
    }

    // Hide the custom cursor when leaving the custom section
    function resetCursor() {
      gsap.to(cursorText, {
        duration: 0.5,
        scale: 0,
        opacity: 0,
        ease: "back.in(1.7)",
      });
      gsap.to(cursor, {
        duration: 0.5,
        opacity: 0,
        scale: 0,
        backgroundColor: "transparent",
        ease: "power3.out",
      });
    }

    // Use event delegation to check for custom data attributes
    document.addEventListener("mouseover", (e) => {
      let target =
        e.target.nodeType === Node.TEXT_NODE
          ? e.target.parentElement
          : e.target;
      if (target.closest && target.closest("[data-cursor-text]")) {
        updateCursor(target);
      }
    });
    document.addEventListener("mouseout", (e) => {
      let target =
        e.target.nodeType === Node.TEXT_NODE
          ? e.target.parentElement
          : e.target;
      if (target.closest && target.closest("[data-cursor-text]")) {
        // Only reset if the new hovered element isn't within a custom section
        if (
          !e.relatedTarget ||
          !e.relatedTarget.closest("[data-cursor-text]")
        ) {
          resetCursor();
        }
      }
    });
  });
</script>
