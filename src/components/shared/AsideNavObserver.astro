---
// No props needed or you could have ones to customize the observer behavior
---

<script is:inline>
  document.addEventListener("astro:page-load", () => {
    // Select the first item by default
    const firstListItem = document.querySelector("[list-item]:first-child");
    if (firstListItem) {
      firstListItem.classList.add("active");
    }

    // Intersection Observer for highlighting menu items
    const items = document.querySelectorAll('[data-item="observed"]');
    const io = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            const myTarget = entry.target;
            const sectionName = myTarget.id;

            document.querySelectorAll("[list-item]").forEach((el) => {
              el.classList.remove("active");
            });

            const listItem = document.querySelector(
              `[list-item="${sectionName}"]`
            );
            if (listItem) {
              listItem.classList.add("active");
            }
          }
        });
      },
      {
        root: null,
        rootMargin: "-5% 0px -40% 0px", // Adjusted to be more lenient
        threshold: 0.05, // Reduced threshold for better detection
      }
    );

    items.forEach((item) => io.observe(item));
  });
</script>
